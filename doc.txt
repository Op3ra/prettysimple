-- Pretty Simple Test API Documentation
by Cl√©ment Cousin


0. Notes

- This API is written using Node.js

- Routes don't include the base URL.
Ex: /gift/list means {Base URL}/gift/list

- Route parameters are between {}, they have to be replaced by actual data when using the API.

- All API call return a JSON result except in two cases:
    a. User attempting to give a gift to himself
    b. User attempting to claim a give when there's none avaiable
These two cases return a string explaining the error. This choice is based on the test nature of the API. In a production environment, these would be error codes.

- HTTP must be as specified or the server will answer with a 404 HTTP error.

- POST parameters are expected as URL encoded data

- All times are UTC

- All "failure" returns describe a normal case of failure (ex: no gift to claim). Technical errors such as invalid ids are self-explanatory in return.


1. Format of JSON objects

a. User
- id: the user uuid
- name: the user name

b. Gift
- id: the gift id
- send_date: the date at which the gift was sent
- expiration: the expiration date of the gift
- claim_date: the date at which the gift was claimed
- sender_id: the sender uuid
- receiver_id: the receiver uuid


2. Listing routes

a. List users
Route: "/user/list"
Method: GET
Return: a list of all users

b. List gifts
Route: "/gift/list"
Method: GET
Return: a list of all gifts, whether or not they are claimed

c. List gifts to user
Route: "/gift/to/{user}"
Method: GET
Parameters:
    {user}: the user uuid
Return: A list of all gifts sent to the specified user

d. List gifts from user
Route: "/gift/from/{user}"
Method: GET
Parameters:
    {user}: the user uuid
Return: A list of all gifts sent by the specified user


3. Action routes

a. Send gift
Route: "/gift/give"
Method: POST
Parameters:
   from: sender user uuid
   to:   receiver user uuid
Return: if success, the newly inserted gift
        if failure (i.e.: the sender is not allowed to send a gift to the receiver), a list of exsiting gifts from the sender to the receiver.

b. Claim gift
Route: "/gift/claim"
Method: POST
Parameters:
   from: sender user uuid
   to:   receiver user uuid
Return: if success, the claimed gift, with "claim_date" as "null"
        if failure, a "No gift to claim" message
If there are several claimable gifts, the oldest one (the one with the closest expiration date) is claimed.


4. Other routes

a. Test helper
Route: "/gift/test/create/{username}/{city}"
Method: GET
Return: A JSON array containing two items "user"{'id', 'name'} and "city"{'id', 'name', 'mayor_id'}
        reprensenting the newly created entries.

b. Documentation
Route: "/gift/doc"
Method: GET
Return: This document.

c. Source code
Route: "/gift/source"
Method: GET
Return: An archive containing the source code


5. Dependencies
This API uses:
- Hapi.js for creating the web server
- Joi for paramater validation
- Sequelize as ORM (pg and pg-hstore for database access)


